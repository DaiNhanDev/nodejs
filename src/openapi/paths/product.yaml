paths:
  /product/create:
    post:
      summary: Create an Product
      description: Logged in users can create an Product.
      tags: [Product]
      security:
        - bearerAuth: []
        - clientId: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request

  /product/draft/all:
    get:
      summary: Get Drafts Products information
      description: Logged in users can fetch only their own user information.
      tags: [Product]
      security:
        - bearerAuth: []
        - clientId: []
      responses:
        "200": 
          $ref: '#/components/responses/GetList' 
        "400":
          description: Bad Request

  /product/published/all:
    get:
      summary: Get Drafts Products information
      description: Logged in users can fetch only their own user information.
      tags: [Product]
      security:
        - bearerAuth: []
        - clientId: []
      responses:
        "200": 
          $ref: '#/components/responses/GetList'  
        "400":
          description: Bad Request

  /product/publish/{id}:
    put:
      summary: update an Product
      description: Logged in users can edit an Product.
      tags: [Product]
      security:
        - bearerAuth: []
        - clientId: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            example: string
          required: false
          description: id items
      responses:
        "204":
          description: The Product was publish successfully.
        "401":
          description: Authorization information is missing or invalid.
        "400":
          description:  Bad Request
        "404":
          description: A user with the specified ID was not found.

  /product/unpublish/{id}:
    put:
      summary: update an Product
      description: Logged in users can edit an Product.
      tags: [Product]
      security:
        - bearerAuth: []
        - clientId: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            example: string
          required: false
      responses:
        "204":
          description: The Product was unpublish successfully.
        "401":
          description: Authorization information is missing or invalid.
        "400":
          description:  Bad Request
        "404":
          description: A user with the specified ID was not found.

  /product/search:
    get:
      summary: Get Products information by User
      description: Logged in users can fetch only their own user information.
      tags: [Product]
      security:
        - clientId: []
      parameters:
        - in: query
          name: search
      responses:
        "200": 
          $ref: '#/components/responses/GetList'  
        "400":
          description: Bad Request


  /product/all:
    get:
      summary: Get Products information by User
      description: Logged in users can fetch only their own user information.
      tags: [Product]
      security:
        - clientId: []
      parameters:
        - in: query
          name: search
      responses:
        "200": 
          $ref: '#/components/responses/GetList'         
        "400":
          description: Bad Request

  /product/{product_id}:
    get:
      summary: Get Products information by User
      description: Logged in users can fetch only their own user information.
      tags: [Product]
      security:
        - clientId: []
      parameters:
        - in: path
          name: product_id
      responses:
        "200":
          $ref: '#/components/responses/GetData'   
        "400":
          description: Bad Request
  
  #   /v1/product/delete:
  #     delete:
  #       summary: delete an Product
  #       description: Logged in users can delete an Product.
  #       tags: [Product]
  #       security:
  #         - bearerAuth: []
  #       requestBody:
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               required:
  #                 - id
  #               properties:
  #                 id:
  #                   type: interger
  #               example:
  #                 id:  1
  #       responses:
  #         "200":
  #           description: Deleted
  #         "400":
  #           description:  Bad Request

  #   /v1/product/delete/list:
  #     delete:
  #       summary: delete an Product
  #       description: Logged in users can delete an Product.
  #       tags: [Product]
  #       security:
  #         - bearerAuth: []
  #       requestBody:
  #         required: true
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 ids:
  #                   type: array
  #                   items:
  #                     type: number
  #               example:
  #                 ids:  [1]
  #       responses:
  #         "200":
  #           description: Deleted
  #         "400":
  #           description:  Bad Request

  /product:
    get:
      summary: Get Products information by User
      description: Logged in users can fetch only their own user information.
      tags: [Product]
      security:
        - clientId: []
      parameters:
        - in: query
          name: search
      responses:
        "200": 
          $ref: '#/components/responses/GetList'         
        "400":
          description: Bad Request
